{
  "leetcodeNumber": 1854,
  "title": "Maximum Population Year",
  "difficulty": "Easy",
  "description": "You are given a 2D integer array logs where each logs[i] = [birthi, deathi] indicates the birth and death years of the ith person.\n\nThe population of some year x is the number of people alive during that year.\nThe ith person is counted in year x if birthi <= x < deathi (that is, they are alive from birth year up to, but not including, the death year).\n\nReturn the earliest year with the maximum population.",
  "solution": "class Solution:\n    def maximumPopulation(self, logs):\n        # Population changes for each year from 1950 to 2050\n        population = [0] * 101  # Index 0 -> 1950, index 100 -> 2050\n\n        # Mark +1 at each birth, -1 at each death (exclusive)\n        for birth, death in logs:\n            population[birth - 1950] += 1\n            population[death - 1950] -= 1\n\n        # Sweep through years, track running population and max\n        max_pop = 0\n        max_year = 1950\n        curr_pop = 0\n        for i in range(101):\n            curr_pop += population[i]\n            if curr_pop > max_pop:\n                max_pop = curr_pop\n                max_year = 1950 + i\n\n        return max_year\n",
  "timeComplexity": "O(n)",
  "spaceComplexity": "O(u)",
  "tags": [],
  "leetcodeUrl": "https://leetcode.com/problems/maximum-population-year/description/",
  "lldQuestion": "",
  "lldApproach": "",
  "lldTechStack": [],
  "lldCodeExample": "",
  "hldQuestion": "",
  "hldApproach": "",
  "hldTechStack": [],
  "hldArchitecture": "",
  "systemDesignQuestion": "",
  "systemDesignApproach": "",
  "systemDesignDiagram": "",
  "scalingConsiderations": "",
  "id": "problem-1854-1750628162767",
  "createdAt": "2025-06-22T21:36:02.767Z",
  "updatedAt": "2025-06-22T21:36:02.767Z"
}